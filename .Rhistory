ggsave(plot = p, file = "Lasso_MSE.png", width = 3.5, height = 3, units = "in")
# plot R2
all <- read.table("Lasso_r2_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_r2_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = lamda, ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = lamda, y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = lamda, y = cross_median), col = "blue", size = 0.3)
p <- p + xlab(expression(alpha)) + ylab(expression(R^2))
p <- p + ylim(0.42, 0.52)
p <- p + ggtitle(bquote('(b)' ~ R^2))
ggsave(plot = p, file = "Lasso_R2.png", width = 3.5, height = 3, units = "in")
p
tail(plot_data)
head(plot_data)
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = lamda, ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = lamda, y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = lamda, y = cross_median), col = "blue", size = 0.3)
p <- p + xlab(expression(alpha)) + ylab(expression(R^2))
p
p <- p + ylim(0.44, 0.52)
p
p <- p + ylim(0.42, 0.52)
p
p <- p + ylim(0.4, 0.52)
p
p <- p + ylim(0.41, 0.52)
p
# plot figure 3 in report
library(ggplot2)
# plot MSE
all <- read.table("Lasso_mse_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_mse_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = lamda, ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = lamda, y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = lamda, y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(alpha)) + ylab("MSE")
p <- p + ggtitle("(a) MSE")
ggsave(plot = p, file = "Lasso_MSE.png", width = 3.5, height = 3, units = "in")
# plot R2
all <- read.table("Lasso_r2_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_r2_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = lamda, ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = lamda, y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = lamda, y = cross_median), col = "blue", size = 0.3)
p <- p + xlab(expression(alpha)) + ylab(expression(R^2))
p <- p + ylim(0.41, 0.52)
p <- p + ggtitle(bquote('(b)' ~ R^2))
ggsave(plot = p, file = "Lasso_R2.png", width = 3.5, height = 3, units = "in")
# plot figure 2 in report
library(ggplot2)
# plot MSE
all <- read.table("Ridge_mse_all.txt", header = TRUE, sep = ";")
cross <- read.table("Ridge_mse_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.25, 0.5, 0.75), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = lamda, ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = lamda, y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = lamda, y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(lambda)) + ylab("MSE")
p <- p + ggtitle("(a) MSE")
ggsave(plot = p, file = "Ridge_MSE.png", width = 3.5, height = 3, units = "in")
# plot R2
all <- read.table("Ridge_r2_all.txt", header = TRUE, sep = ";")
cross <- read.table("Ridge_r2_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = lamda, ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = lamda, y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = lamda, y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(lambda)) + ylab(expression(R^2))
p <- p + ggtitle(bquote('(b)' ~ R^2))
p <- p + ylim(0.41, 0.52)
ggsave(plot = p, file = "Ridge_R2.png", width = 3.5, height = 3, units = "in")
# plot figure 3 in report
library(ggplot2)
# plot MSE
all <- read.table("Lasso_mse_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_mse_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = lamda, ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = lamda, y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = lamda, y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(log(alpha))) + ylab("MSE")
p <- p + ggtitle("(a) MSE")
ggsave(plot = p, file = "Lasso_MSE.png", width = 3.5, height = 3, units = "in")
# plot R2
all <- read.table("Lasso_r2_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_r2_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = log(lamda), ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = log(lamda), y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = log(lamda), y = cross_median), col = "blue", size = 0.3)
p <- p + xlab(expression(log(alpha))) + ylab(expression(R^2))
p <- p + ylim(0.41, 0.52)
p <- p + ggtitle(bquote('(b)' ~ R^2))
ggsave(plot = p, file = "Lasso_R2.png", width = 3.5, height = 3, units = "in")
# plot figure 3 in report
library(ggplot2)
# plot MSE
all <- read.table("Lasso_mse_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_mse_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = log(lamda), ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = log(lamda), y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = log(lamda), y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(log(alpha))) + ylab("MSE")
p <- p + ggtitle("(a) MSE")
ggsave(plot = p, file = "Lasso_MSE.png", width = 3.5, height = 3, units = "in")
# plot R2
all <- read.table("Lasso_r2_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_r2_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = log(lamda), ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = log(lamda), y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = log(lamda), y = cross_median), col = "blue", size = 0.3)
p <- p + xlab(expression(log(alpha))) + ylab(expression(R^2))
p <- p + ylim(0.41, 0.52)
p <- p + ggtitle(bquote('(b)' ~ R^2))
ggsave(plot = p, file = "Lasso_R2.png", width = 3.5, height = 3, units = "in")
# plot figure 3 in report
library(ggplot2)
# plot MSE
all <- read.table("Lasso_mse_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_mse_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = log(lamda), ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = log(lamda), y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = log(lamda), y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(log(alpha))) + ylab("MSE")
p <- p + ggtitle("(a) MSE")
ggsave(plot = p, file = "Lasso_MSE.png", width = 3.5, height = 3, units = "in")
# plot R2
all <- read.table("Lasso_r2_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_r2_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = log(lamda), ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = log(lamda), y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = log(lamda), y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(log(alpha))) + ylab(expression(R^2))
p <- p + ylim(0.41, 0.52)
p <- p + ggtitle(bquote('(b)' ~ R^2))
ggsave(plot = p, file = "Lasso_R2.png", width = 3.5, height = 3, units = "in")
log(10)
log10(10)
# plot figure 3 in report
library(ggplot2)
# plot MSE
all <- read.table("Lasso_mse_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_mse_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = log10(lamda), ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = log10(lamda), y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = log10(lamda), y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(log10(alpha))) + ylab("MSE")
p <- p + ggtitle("(a) MSE")
ggsave(plot = p, file = "Lasso_MSE.png", width = 3.5, height = 3, units = "in")
# plot R2
all <- read.table("Lasso_r2_all.txt", header = TRUE, sep = ";")
cross <- read.table("Lasso_r2_cross.txt", header = TRUE, sep = ";")
lamda_values <- all[, 1]
n_l <- length(lamda_values)
conf_levels <- matrix(data = NA, nrow = n_l, ncol = 3)
for (i_l in seq(1, n_l, 1)) {
temp_data <- cross[which(cross[,1] == lamda_values[i_l]),2]
conf_levels[i_l,] <- quantile(temp_data, probs = c(0.025, 0.5, 0.975), names = TRUE)
}
plot_data <- data.frame(lamda = lamda_values, all = all[,2],
cross_0.25 = conf_levels[, 1],
cross_median = conf_levels[, 2],
cross_0.75 = conf_levels[, 3])
p <- ggplot(data = plot_data)
p <- p  + geom_ribbon(aes(x = log10(lamda), ymin = cross_0.25, ymax = cross_0.75), fill = "grey70")
p <- p + geom_line(aes(x = log10(lamda), y = all), col = "black", size = 1.5)
p <- p + geom_line(aes(x = log10(lamda), y = cross_median), col = "blue", size = 1.5)
p <- p + xlab(expression(log10(alpha))) + ylab(expression(R^2))
p <- p + ylim(0.41, 0.52)
p <- p + ggtitle(bquote('(b)' ~ R^2))
ggsave(plot = p, file = "Lasso_R2.png", width = 3.5, height = 3, units = "in")
# plot figure 1 in report
library(ggplot2)
OLS <- read.table("real_dataOLS_p.txt", header = TRUE, sep = ";")
OLS <- cbind(rep("OLS", dim(OLS)[1]), OLS)
colnames(OLS) <- c("method", "picth", "true", "fitted")
Ridge <- read.table("real_dataRidge_p.txt", header = TRUE, sep = ";")
Ridge <- cbind(rep("Ridge", dim(Ridge)[1]), Ridge)
colnames(Ridge) <- c("method", "picth", "true", "fitted")
Lasso <- read.table("real_dataLasso_p.txt", header = TRUE, sep = ";")
Lasso <- data.frame(cbind(rep("Lasso", dim(Lasso)[1]), Lasso))
colnames(Lasso) <- c("method", "picth", "true", "fitted")
plot_data <- rbind(OLS, Ridge)
plot_data <- rbind(plot_data, Lasso)
colnames(plot_data) <- c("method", "pitch", "true", "fitted")
diff <- plot_data[, 4] - plot_data[,3]
plot_data <- cbind(plot_data, diff)
for (i in seq(1, 4)) {
pitch = plot_data[which(plot_data[, 2] == i), ]
p <- ggplot()
p <- p + geom_point(data = pitch, aes(x = true, y = fitted), cex = 0.8, alpha = 0.6)
p <- p + geom_line(y = x, col = "red")
p <- p + facet_grid(. ~ method )
p <- p + coord_fixed()
#r<-max(abs(ggplot_build(p)$panel$ranges[[1]]$x.range))
#s<-max(abs(ggplot_build(p)$panel$ranges[[1]]$y.range))
#t<-round(max(r,s),1)
#p<-p+coord_equal(xlim=c(-t,t),ylim=c(-t,t))
p <- p +coord_equal()
p <- p + ggtitle(sprintf("pitch %d", i))
ggsave(plot = p, file = sprintf("pitch_%d.png", i), width = 10, units = "in")
}
whole = plot_data[which(plot_data[, 2] == 5), ]
whole[,1] <- as.character(whole[,1])
whole <- cbind(whole, whole[,4] - whole[,3])
colnames(whole)[5] <- "diff"
#p <- ggplot()
#p <- p + geom_point(data = whole, aes(x = true, y = fitted))
#p <- p + facet_grid(. ~ method)
#ggsave(plot = p, file = "whole.png", width = 11, height = 3, units = "in")
p <- ggplot(data = whole, aes(as.numeric(whole$diff)))
p <- geom_histogram()
p <- p + facet_grid( . ~ method )
ggsave(plot = p, file = "whole_hist.png", width = 11, height = 3, units = "in")
# plot figure 1 in report
library(ggplot2)
OLS <- read.table("real_dataOLS_p.txt", header = TRUE, sep = ";")
OLS <- cbind(rep("OLS", dim(OLS)[1]), OLS)
colnames(OLS) <- c("method", "picth", "true", "fitted")
Ridge <- read.table("real_dataRidge_p.txt", header = TRUE, sep = ";")
Ridge <- cbind(rep("Ridge", dim(Ridge)[1]), Ridge)
colnames(Ridge) <- c("method", "picth", "true", "fitted")
Lasso <- read.table("real_dataLasso_p.txt", header = TRUE, sep = ";")
Lasso <- data.frame(cbind(rep("Lasso", dim(Lasso)[1]), Lasso))
colnames(Lasso) <- c("method", "picth", "true", "fitted")
plot_data <- rbind(OLS, Ridge)
plot_data <- rbind(plot_data, Lasso)
colnames(plot_data) <- c("method", "pitch", "true", "fitted")
diff <- plot_data[, 4] - plot_data[,3]
plot_data <- cbind(plot_data, diff)
for (i in seq(1, 4)) {
pitch = plot_data[which(plot_data[, 2] == i), ]
p <- ggplot()
p <- p + geom_point(data = pitch, aes(x = true, y = fitted), cex = 0.8, alpha = 0.6)
#p <- p + geom_line(y = x, col = "red")
p <- p + geom_abline(intercept = 0, slope = 1)
p <- p + facet_grid(. ~ method )
p <- p + coord_fixed()
#r<-max(abs(ggplot_build(p)$panel$ranges[[1]]$x.range))
#s<-max(abs(ggplot_build(p)$panel$ranges[[1]]$y.range))
#t<-round(max(r,s),1)
#p<-p+coord_equal(xlim=c(-t,t),ylim=c(-t,t))
p <- p +coord_equal()
p <- p + ggtitle(sprintf("pitch %d", i))
ggsave(plot = p, file = sprintf("pitch_%d.png", i), width = 10, heigt = 4, units = "in")
}
whole = plot_data[which(plot_data[, 2] == 5), ]
whole[,1] <- as.character(whole[,1])
whole <- cbind(whole, whole[,4] - whole[,3])
colnames(whole)[5] <- "diff"
#p <- ggplot()
#p <- p + geom_point(data = whole, aes(x = true, y = fitted))
#p <- p + facet_grid(. ~ method)
#ggsave(plot = p, file = "whole.png", width = 11, height = 3, units = "in")
p <- ggplot(data = whole, aes(as.numeric(whole$diff)))
p <- geom_histogram()
p <- p + facet_grid( . ~ method )
ggsave(plot = p, file = "whole_hist.png", width = 11, height = 3, units = "in")
# plot figure 1 in report
library(ggplot2)
OLS <- read.table("real_dataOLS_p.txt", header = TRUE, sep = ";")
OLS <- cbind(rep("OLS", dim(OLS)[1]), OLS)
colnames(OLS) <- c("method", "picth", "true", "fitted")
Ridge <- read.table("real_dataRidge_p.txt", header = TRUE, sep = ";")
Ridge <- cbind(rep("Ridge", dim(Ridge)[1]), Ridge)
colnames(Ridge) <- c("method", "picth", "true", "fitted")
Lasso <- read.table("real_dataLasso_p.txt", header = TRUE, sep = ";")
Lasso <- data.frame(cbind(rep("Lasso", dim(Lasso)[1]), Lasso))
colnames(Lasso) <- c("method", "picth", "true", "fitted")
plot_data <- rbind(OLS, Ridge)
plot_data <- rbind(plot_data, Lasso)
colnames(plot_data) <- c("method", "pitch", "true", "fitted")
diff <- plot_data[, 4] - plot_data[,3]
plot_data <- cbind(plot_data, diff)
for (i in seq(1, 4)) {
pitch = plot_data[which(plot_data[, 2] == i), ]
p <- ggplot()
p <- p + geom_point(data = pitch, aes(x = true, y = fitted), cex = 0.8, alpha = 0.6)
#p <- p + geom_line(y = x, col = "red")
p <- p + facet_grid(. ~ method )
#p <- p + coord_fixed()
p <- p + geom_abline(intercept = 0, slope = 1)
#r<-max(abs(ggplot_build(p)$panel$ranges[[1]]$x.range))
#s<-max(abs(ggplot_build(p)$panel$ranges[[1]]$y.range))
#t<-round(max(r,s),1)
#p<-p+coord_equal(xlim=c(-t,t),ylim=c(-t,t))
p <- p +coord_equal()
p <- p + ggtitle(sprintf("pitch %d", i))
ggsave(plot = p, file = sprintf("pitch_%d.png", i), width = 10, heigt = 4, units = "in")
}
whole = plot_data[which(plot_data[, 2] == 5), ]
whole[,1] <- as.character(whole[,1])
whole <- cbind(whole, whole[,4] - whole[,3])
colnames(whole)[5] <- "diff"
#p <- ggplot()
#p <- p + geom_point(data = whole, aes(x = true, y = fitted))
#p <- p + facet_grid(. ~ method)
#ggsave(plot = p, file = "whole.png", width = 11, height = 3, units = "in")
p <- ggplot(data = whole, aes(as.numeric(whole$diff)))
p <- geom_histogram()
p <- p + facet_grid( . ~ method )
ggsave(plot = p, file = "whole_hist.png", width = 11, height = 3, units = "in")
for (i in seq(1, 4)) {
pitch = plot_data[which(plot_data[, 2] == i), ]
p <- ggplot()
p <- p + geom_point(data = pitch, aes(x = true, y = fitted), cex = 0.8, alpha = 0.6)
#p <- p + geom_line(y = x, col = "red")
p <- p + facet_grid(. ~ method )
#p <- p + coord_fixed()
p <- p + geom_abline(intercept = 0, slope = 1)
#r<-max(abs(ggplot_build(p)$panel$ranges[[1]]$x.range))
#s<-max(abs(ggplot_build(p)$panel$ranges[[1]]$y.range))
#t<-round(max(r,s),1)
#p<-p+coord_equal(xlim=c(-t,t),ylim=c(-t,t))
p <- p +coord_equal()
p <- p + ggtitle(sprintf("pitch %d", i))
ggsave(plot = p, file = sprintf("pitch_%d.png", i), width = 10, height = 4, units = "in")
}
for (i in seq(1, 4)) {
pitch = plot_data[which(plot_data[, 2] == i), ]
p <- ggplot()
p <- p + geom_point(data = pitch, aes(x = true, y = fitted), cex = 0.8, alpha = 0.6)
#p <- p + geom_line(y = x, col = "red")
p <- p + facet_grid(. ~ method )
#p <- p + coord_fixed()
p <- p + geom_abline(intercept = 0, slope = 1, col = "red", cex = 2)
#r<-max(abs(ggplot_build(p)$panel$ranges[[1]]$x.range))
#s<-max(abs(ggplot_build(p)$panel$ranges[[1]]$y.range))
#t<-round(max(r,s),1)
#p<-p+coord_equal(xlim=c(-t,t),ylim=c(-t,t))
p <- p +coord_equal()
p <- p + ggtitle(sprintf("pitch %d", i))
ggsave(plot = p, file = sprintf("pitch_%d.png", i), width = 10, height = 4, units = "in")
}
for (i in seq(1, 4)) {
pitch = plot_data[which(plot_data[, 2] == i), ]
p <- ggplot()
p <- p + geom_point(data = pitch, aes(x = true, y = fitted), cex = 0.8, alpha = 0.6)
#p <- p + geom_line(y = x, col = "red")
p <- p + facet_grid(. ~ method )
#p <- p + coord_fixed()
p <- p + geom_abline(intercept = 0, slope = 1, col = "red", cex = 1, alpha = 0.5)
#r<-max(abs(ggplot_build(p)$panel$ranges[[1]]$x.range))
#s<-max(abs(ggplot_build(p)$panel$ranges[[1]]$y.range))
#t<-round(max(r,s),1)
#p<-p+coord_equal(xlim=c(-t,t),ylim=c(-t,t))
p <- p +coord_equal()
p <- p + ggtitle(sprintf("pitch %d", i))
ggsave(plot = p, file = sprintf("pitch_%d.png", i), width = 10, height = 4, units = "in")
}
head(plot_data)
true <- plot_data[which(plot_data[,1] == "OLS"), c(1,2)]
true <- plot_data[which(plot_data[,1] == "OLS"), c(2, 3)]
for (i in seq(1, 4)) {
true_pitch = true[which(true[, 1] == i), 2]
print(sd(true_pitch)/mean(true_pitch))
}
head(true)
for (i in seq(1, 4)) {
true_pitch = true[which(true[, 1] == i), 2]
print(c(mean(true_pitch), sd(true_pitch)/mean(true_pitch)))
}
for (i in seq(1, 4)) {
true_pitch = true[which(true[, 1] == i), 2]
print(c(mean(true_pitch), sd(true_pitch)/mean(true_pitch)))
print(c(min(true_pitch), max(true_pitch)))
}
